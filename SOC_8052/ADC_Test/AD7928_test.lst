0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Wed Jun 13 15:37:36 2018
0000              5   ;--------------------------------------------------------
                  5   $name AD7928_test
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _SevenSeg
0000             28            public _main
0000             29            public _MyDelay
0000             30            public _Wait1ms
0000             31            public _DisplayFloat
0000             32            public _AD7928RW
0000             33            public __c51_external_startup
0000             34            public _de2_8052_crt0
0000             35   ;--------------------------------------------------------
0000             36   ; Special Function Registers
0000             37   ;--------------------------------------------------------
0000             38   _P0             DATA 0x80
0000             39   _SP             DATA 0x81
0000             40   _DPL            DATA 0x82
0000             41   _DPH            DATA 0x83
0000             42   _PCON           DATA 0x87
0000             43   _TCON           DATA 0x88
0000             44   _TMOD           DATA 0x89
0000             45   _TL0            DATA 0x8a
0000             46   _TL1            DATA 0x8b
0000             47   _TH0            DATA 0x8c
0000             48   _TH1            DATA 0x8d
0000             49   _P1             DATA 0x90
0000             50   _SCON           DATA 0x98
0000             51   _SBUF           DATA 0x99
0000             52   _P2             DATA 0xa0
0000             53   _IE             DATA 0xa8
0000             54   _P3             DATA 0xb0
0000             55   _IP             DATA 0xb8
0000             56   _PSW            DATA 0xd0
0000             57   _ACC            DATA 0xe0
0000             58   _B              DATA 0xf0
0000             59   _T2CON          DATA 0xc8
0000             60   _RCAP2L         DATA 0xca
0000             61   _RCAP2H         DATA 0xcb
0000             62   _TL2            DATA 0xcc
0000             63   _TH2            DATA 0xcd
0000             64   _DPS            DATA 0x86
0000             65   _DPH1           DATA 0x85
0000             66   _DPL1           DATA 0x84
0000             67   _HEX0           DATA 0x91
0000             68   _HEX1           DATA 0x92
0000             69   _HEX2           DATA 0x93
0000             70   _HEX3           DATA 0x94
0000             71   _HEX4           DATA 0x8e
0000             72   _HEX5           DATA 0x8f
0000             73   _LEDRA          DATA 0xe8
0000             74   _LEDRB          DATA 0x95
0000             75   _SWA            DATA 0xe8
0000             76   _SWB            DATA 0x95
0000             77   _KEY            DATA 0xf8
0000             78   _P0MOD          DATA 0x9a
0000             79   _P1MOD          DATA 0x9b
0000             80   _P2MOD          DATA 0x9c
0000             81   _P3MOD          DATA 0x9d
0000             82   _LCD_CMD        DATA 0xd8
0000             83   _LCD_DATA       DATA 0xd9
0000             84   _LCD_MOD        DATA 0xda
0000             85   _JCMD           DATA 0xc0
0000             86   _JBUF           DATA 0xc1
0000             87   _JCNT           DATA 0xc2
0000             88   _REP_ADD_L      DATA 0xf1
0000             89   _REP_ADD_H      DATA 0xf2
0000             90   _REP_VALUE      DATA 0xf3
0000             91   _DEBUG_CALL_L   DATA 0xfa
0000             92   _DEBUG_CALL_H   DATA 0xfb
0000             93   _BPC            DATA 0xfc
0000             94   _BPS            DATA 0xfd
0000             95   _BPAL           DATA 0xfe
0000             96   _BPAH           DATA 0xff
0000             97   _LBPAL          DATA 0xfa
0000             98   _LBPAH          DATA 0xfb
0000             99   _XRAMUSEDAS     DATA 0xc3
0000            100   _FLASH_CMD      DATA 0xdb
0000            101   _FLASH_DATA     DATA 0xdc
0000            102   _FLASH_MOD      DATA 0xdd
0000            103   _FLASH_ADD0     DATA 0xe1
0000            104   _FLASH_ADD1     DATA 0xe2
0000            105   _FLASH_ADD2     DATA 0xe3
0000            106   ;--------------------------------------------------------
0000            107   ; special function bits
0000            108   ;--------------------------------------------------------
0000            109   _P0_0           BIT 0x80
0000            110   _P0_1           BIT 0x81
0000            111   _P0_2           BIT 0x82
0000            112   _P0_3           BIT 0x83
0000            113   _P0_4           BIT 0x84
0000            114   _P0_5           BIT 0x85
0000            115   _P0_6           BIT 0x86
0000            116   _P0_7           BIT 0x87
0000            117   _IT0            BIT 0x88
0000            118   _IE0            BIT 0x89
0000            119   _IT1            BIT 0x8a
0000            120   _IE1            BIT 0x8b
0000            121   _TR0            BIT 0x8c
0000            122   _TF0            BIT 0x8d
0000            123   _TR1            BIT 0x8e
0000            124   _TF1            BIT 0x8f
0000            125   _P1_0           BIT 0x90
0000            126   _P1_1           BIT 0x91
0000            127   _P1_2           BIT 0x92
0000            128   _P1_3           BIT 0x93
0000            129   _P1_4           BIT 0x94
0000            130   _P1_5           BIT 0x95
0000            131   _P1_6           BIT 0x96
0000            132   _P1_7           BIT 0x97
0000            133   _RI             BIT 0x98
0000            134   _TI             BIT 0x99
0000            135   _RB8            BIT 0x9a
0000            136   _TB8            BIT 0x9b
0000            137   _REN            BIT 0x9c
0000            138   _SM2            BIT 0x9d
0000            139   _SM1            BIT 0x9e
0000            140   _SM0            BIT 0x9f
0000            141   _P2_0           BIT 0xa0
0000            142   _P2_1           BIT 0xa1
0000            143   _P2_2           BIT 0xa2
0000            144   _P2_3           BIT 0xa3
0000            145   _P2_4           BIT 0xa4
0000            146   _P2_5           BIT 0xa5
0000            147   _P2_6           BIT 0xa6
0000            148   _P2_7           BIT 0xa7
0000            149   _EX0            BIT 0xa8
0000            150   _ET0            BIT 0xa9
0000            151   _EX1            BIT 0xaa
0000            152   _ET1            BIT 0xab
0000            153   _ES             BIT 0xac
0000            154   _ET2            BIT 0xad
0000            155   _EA             BIT 0xaf
0000            156   _P3_0           BIT 0xb0
0000            157   _P3_1           BIT 0xb1
0000            158   _P3_2           BIT 0xb2
0000            159   _P3_3           BIT 0xb3
0000            160   _P3_4           BIT 0xb4
0000            161   _P3_5           BIT 0xb5
0000            162   _P3_6           BIT 0xb6
0000            163   _P3_7           BIT 0xb7
0000            164   _RXD            BIT 0xb0
0000            165   _TXD            BIT 0xb1
0000            166   _INT0           BIT 0xb2
0000            167   _INT1           BIT 0xb3
0000            168   _T0             BIT 0xb4
0000            169   _T1             BIT 0xb5
0000            170   _WR             BIT 0xb6
0000            171   _RD             BIT 0xb7
0000            172   _PX0            BIT 0xb8
0000            173   _PT0            BIT 0xb9
0000            174   _PX1            BIT 0xba
0000            175   _PT1            BIT 0xbb
0000            176   _PS             BIT 0xbc
0000            177   _PT2            BIT 0xbd
0000            178   _P              BIT 0xd0
0000            179   _F1             BIT 0xd1
0000            180   _OV             BIT 0xd2
0000            181   _RS0            BIT 0xd3
0000            182   _RS1            BIT 0xd4
0000            183   _F0             BIT 0xd5
0000            184   _AC             BIT 0xd6
0000            185   _CY             BIT 0xd7
0000            186   _T2CON_0        BIT 0xc8
0000            187   _T2CON_1        BIT 0xc9
0000            188   _T2CON_2        BIT 0xca
0000            189   _T2CON_3        BIT 0xcb
0000            190   _T2CON_4        BIT 0xcc
0000            191   _T2CON_5        BIT 0xcd
0000            192   _T2CON_6        BIT 0xce
0000            193   _T2CON_7        BIT 0xcf
0000            194   _CP_RL2         BIT 0xc8
0000            195   _C_T2           BIT 0xc9
0000            196   _TR2            BIT 0xca
0000            197   _EXEN2          BIT 0xcb
0000            198   _TCLK           BIT 0xcc
0000            199   _RCLK           BIT 0xcd
0000            200   _EXF2           BIT 0xce
0000            201   _TF2            BIT 0xcf
0000            202   _LEDRA_0        BIT 0xe8
0000            203   _LEDRA_1        BIT 0xe9
0000            204   _LEDRA_2        BIT 0xea
0000            205   _LEDRA_3        BIT 0xeb
0000            206   _LEDRA_4        BIT 0xec
0000            207   _LEDRA_5        BIT 0xed
0000            208   _LEDRA_6        BIT 0xee
0000            209   _LEDRA_7        BIT 0xef
0000            210   _SWA_0          BIT 0xe8
0000            211   _SWA_1          BIT 0xe9
0000            212   _SWA_2          BIT 0xea
0000            213   _SWA_3          BIT 0xeb
0000            214   _SWA_4          BIT 0xec
0000            215   _SWA_5          BIT 0xed
0000            216   _SWA_6          BIT 0xee
0000            217   _SWA_7          BIT 0xef
0000            218   _KEY_0          BIT 0xf8
0000            219   _KEY_1          BIT 0xf9
0000            220   _KEY_2          BIT 0xfa
0000            221   _KEY_3          BIT 0xfb
0000            222   _LCD_RW         BIT 0xd8
0000            223   _LCD_EN         BIT 0xd9
0000            224   _LCD_RS         BIT 0xda
0000            225   _LCD_ON         BIT 0xdb
0000            226   _LCD_BLON       BIT 0xdc
0000            227   _JRXRDY         BIT 0xc0
0000            228   _JTXRDY         BIT 0xc1
0000            229   _JRXEN          BIT 0xc2
0000            230   _JTXEN          BIT 0xc3
0000            231   _JTXFULL        BIT 0xc4
0000            232   _JRXFULL        BIT 0xc5
0000            233   _JTXEMPTY       BIT 0xc6
0000            234   _JTDI           BIT 0xc7
0000            235   _AD7928_MISO    BIT 0xf8
0000            236   _AD7928_MOSI    BIT 0xf9
0000            237   _AD7928_SCLK    BIT 0xfa
0000            238   _AD7928_EN_N    BIT 0xfb
0000            239   ;--------------------------------------------------------
0000            240   ; overlayable register banks
0000            241   ;--------------------------------------------------------
0000            242            rbank0 segment data overlay
0000            243   ;--------------------------------------------------------
0000            244   ; internal ram data
0000            245   ;--------------------------------------------------------
0000            246            rseg R_DSEG
0000            247   _DisplayFloat_buff_1_50:
0000            248            ds 6
0006            249   ;--------------------------------------------------------
0006            250   ; overlayable items in internal ram 
0006            251   ;--------------------------------------------------------
0000            252            rseg    R_OSEG
0000            253   ;--------------------------------------------------------
0000            254   ; indirectly addressable internal ram data
0000            255   ;--------------------------------------------------------
0000            256            rseg R_ISEG
0000            257   ;--------------------------------------------------------
0000            258   ; absolute internal ram data
0000            259   ;--------------------------------------------------------
0000            260            DSEG
0000            261   ;--------------------------------------------------------
0000            262   ; bit data
0000            263   ;--------------------------------------------------------
0000            264            rseg R_BSEG
0000            265   ;--------------------------------------------------------
0000            266   ; paged external ram data
0000            267   ;--------------------------------------------------------
0000            268            rseg R_PSEG
0000            269   ;--------------------------------------------------------
0000            270   ; external ram data
0000            271   ;--------------------------------------------------------
0000            272            rseg R_XSEG
0000            273   ;--------------------------------------------------------
0000            274   ; absolute external ram data
0000            275   ;--------------------------------------------------------
0000            276            XSEG
0000            277   ;--------------------------------------------------------
0000            278   ; external initialized ram data
0000            279   ;--------------------------------------------------------
0000            280            rseg R_IXSEG
0000            281            rseg R_HOME
0000            282            rseg R_GSINIT
0000            283            rseg R_CSEG
0000            284   ;--------------------------------------------------------
0000            285   ; Reset entry point and interrupt vectors
0000            286   ;--------------------------------------------------------
0000            287            CSEG at 0x0000
0000 020100     288            ljmp    _crt0
0003            289   ;--------------------------------------------------------
0003            290   ; global & static initialisations
0003            291   ;--------------------------------------------------------
0000            292            rseg R_HOME
0000            293            rseg R_GSINIT
0000            294            rseg R_GSINIT
0000            295   ;--------------------------------------------------------
0000            296   ; data variables initialization
0000            297   ;--------------------------------------------------------
0000            298            rseg R_DINIT
0000            299            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            300   ;--------------------------------------------------------
0000            301   ; code
0000            302   ;--------------------------------------------------------
0000            303            rseg R_CSEG
0000            304   ;------------------------------------------------------------
0000            305   ;Allocation info for local variables in function 'de2_8052_crt0'
0000            306   ;------------------------------------------------------------
0000            307   ;------------------------------------------------------------
0000            308   ;        C:/Source/call51/Bin/../include/mcs51/CV_8052.h:303: void de2_8052_crt0 (void) _naked
0000            309   ;        -----------------------------------------
0000            310   ;         function de2_8052_crt0
0000            311   ;        -----------------------------------------
0000            312   _de2_8052_crt0:
0000            313   ;        naked function: no prologue.
0000            314   ;        C:/Source/call51/Bin/../include/mcs51/CV_8052.h:372: _endasm;
0000            315            
0000            316            
0000            317             rseg R_GSINIT
0000            318             public _crt0
0000            319            _crt0:
0000 7581FF     320             mov sp,#_stack_start-1
0003 120100     321             lcall __c51_external_startup
0006 E582       322             mov a,dpl
0008 6001       323             jz __c51_init_data
000A 020100     324             ljmp __c51_program_startup
000D            325            __c51_init_data:
000D            326            
000D            327   ; Initialize xdata variables
000D            328            
000D 758200     329             mov dpl, #_R_XINIT_start
0010 758300     330             mov dph, #(_R_XINIT_start>>8)
0013 758400     331             mov _DPL1, #_R_IXSEG_start
0016 758500     332             mov _DPH1, #(_R_IXSEG_start>>8)
0019 7800       333             mov r0, #_R_IXSEG_size
001B 7900       334             mov r1, #(_R_IXSEG_size>>8)
001D            335            
001D            336            XInitLoop?repeat?:
001D E8         337             mov a, r0
001E 49         338             orl a, r1
001F 6001       339             jz XInitLoop?done?
0021 E4         340             clr a
0022 758600     341             mov _DPS, #0 ; Using dpl, dph
0025 93         342             movc a,@a+dptr
0026 A3         343             inc dptr
0027 758601     344             mov _DPS, #1 ; Using DPL1, DPH1
002A F0         345             movx @dptr, a
002B A3         346             inc dptr
002C 18         347             dec r0
002D B8FFE0     348             cjne r0, #0xff, XInitLoop?repeat?
0030 19         349             dec r1
0031 8001       350             sjmp XInitLoop?repeat?
0033            351            
0033            352            XInitLoop?done?:
0033            353            
0033            354   ; Clear xdata variables
0033 758600     355             mov _DPS, #0 ; Make sure we are using dpl, dph
0036 758200     356             mov dpl, #_R_XSEG_start
0039 758300     357             mov dph, #(_R_XSEG_start>>8)
003C 7C00       358             mov r4, #_R_XSEG_size
003E 7D00       359             mov r5, #(_R_XSEG_size>>8)
0040            360            
0040            361            XClearLoop?repeat?:
0040 EC         362             mov a, r4
0041 4D         363             orl a, r5
0042 6001       364             jz XClearLoop?done?
0044 E4         365             clr a
0045 F0         366             movx @dptr, a
0046 A3         367             inc dptr
0047 1C         368             dec r4
0048 BCFFF0     369             cjne r4, #0xff, XClearLoop?repeat?
004B 1D         370             dec r5
004C 8001       371             sjmp XClearLoop?repeat?
004E            372            
004E            373            XClearLoop?done?:
004E 120100     374             lcall _R_DINIT_start ; Initialize data/idata variables
0051            375            
0051            376            __c51_program_startup:
0051 120100     377             lcall _main
0054            378            
0054            379            forever?home?:
0054 8001       380             sjmp forever?home?
0056            381            
0056            382             
0056            383   ;        naked function: no epilogue.
0056            384   ;------------------------------------------------------------
0056            385   ;Allocation info for local variables in function '_c51_external_startup'
0056            386   ;------------------------------------------------------------
0056            387   ;------------------------------------------------------------
0056            388   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:21: unsigned char _c51_external_startup(void)
0056            389   ;        -----------------------------------------
0056            390   ;         function _c51_external_startup
0056            391   ;        -----------------------------------------
0056            392   __c51_external_startup:
0056            393            using   0
0056            394   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:23: setbaud_timer2(TIMER_2_RELOAD);
0056 90FFF7     395            mov     dptr,#0xFFF7
0059 120100     396            lcall   _setbaud_timer2
005C            397   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:25: LEDRA=0x00;
005C 75E800     398            mov     _LEDRA,#0x00
005F            399   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:26: LEDRB=0x00;
005F 759500     400            mov     _LEDRB,#0x00
0062            401   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:29: AD7928_MOSI=0;
0062 C2F9       402            clr     _AD7928_MOSI
0064            403   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:30: AD7928_SCLK=1;
0064 D2FA       404            setb    _AD7928_SCLK
0066            405   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:31: AD7928_EN_N=1;
0066 D2FB       406            setb    _AD7928_EN_N
0068            407   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:33: return 0;
0068 758200     408            mov     dpl,#0x00
006B 22         409            ret
006C            410   ;------------------------------------------------------------
006C            411   ;Allocation info for local variables in function 'AD7928RW'
006C            412   ;------------------------------------------------------------
006C            413   ;x                         Allocated to registers r2 r3 
006C            414   ;i                         Allocated to registers r4 
006C            415   ;------------------------------------------------------------
006C            416   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:37: unsigned int AD7928RW (unsigned int x)
006C            417   ;        -----------------------------------------
006C            418   ;         function AD7928RW
006C            419   ;        -----------------------------------------
006C            420   _AD7928RW:
006C AA82       421            mov     r2,dpl
006E AB83       422            mov     r3,dph
0070            423   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:40: AD7928_EN_N=0;
0070 C2FB       424            clr     _AD7928_EN_N
0072            425   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:41: do {
0072 7C10       426            mov     r4,#0x10
0074            427   L004003?:
0074            428   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:42: AD7928_MOSI = x & 0x8000;
0074 EB         429            mov     a,r3
0075 33         430            rlc     a
0076 92F9       431            mov     _AD7928_MOSI,c
0078            432   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:43: AD7928_SCLK = 0;
0078 C2FA       433            clr     _AD7928_SCLK
007A            434   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:44: x <<= 1;
007A EB         435            mov     a,r3
007B CA         436            xch     a,r2
007C 25E0       437            add     a,acc
007E CA         438            xch     a,r2
007F 33         439            rlc     a
0080 FB         440            mov     r3,a
0081            441   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:45: if(AD7928_MISO) x += 1; 
0081 30F8C0     442            jnb     _AD7928_MISO,L004002?
0084 0A         443            inc     r2
0085 BA0000     444            cjne    r2,#0x00,L004013?
0088 0B         445            inc     r3
0089            446   L004013?:
0089            447   L004002?:
0089            448   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:46: AD7928_SCLK = 1;
0089 D2FA       449            setb    _AD7928_SCLK
008B            450   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:47: } while(--i);
008B DC40       451            djnz    r4,L004003?
008D            452   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:48: AD7928_EN_N=1;
008D D2FB       453            setb    _AD7928_EN_N
008F            454   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:49: return ((x>>1)&0xfff);
008F EB         455            mov     a,r3
0090 C3         456            clr     c
0091 13         457            rrc     a
0092 CA         458            xch     a,r2
0093 13         459            rrc     a
0094 CA         460            xch     a,r2
0095 FB         461            mov     r3,a
0096 8A82       462            mov     dpl,r2
0098 740F       463            mov     a,#0x0F
009A 5B         464            anl     a,r3
009B F583       465            mov     dph,a
009D 22         466            ret
009E            467   ;------------------------------------------------------------
009E            468   ;Allocation info for local variables in function 'DisplayFloat'
009E            469   ;------------------------------------------------------------
009E            470   ;v                         Allocated to registers r2 r3 r4 r5 
009E            471   ;buff                      Allocated with name '_DisplayFloat_buff_1_50'
009E            472   ;------------------------------------------------------------
009E            473   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:54: void DisplayFloat (float v)
009E            474   ;        -----------------------------------------
009E            475   ;         function DisplayFloat
009E            476   ;        -----------------------------------------
009E            477   _DisplayFloat:
009E AA82       478            mov     r2,dpl
00A0 AB83       479            mov     r3,dph
00A2 ACF0       480            mov     r4,b
00A4 FD         481            mov     r5,a
00A5            482   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:57: sprintf(buff, "%5.3f", v);
00A5 C002       483            push    ar2
00A7 C003       484            push    ar3
00A9 C004       485            push    ar4
00AB C005       486            push    ar5
00AD 7480       487            mov     a,#__str_0
00AF C0E0       488            push    acc
00B1 747F       489            mov     a,#(__str_0 >> 8)
00B3 C0E0       490            push    acc
00B5 7480       491            mov     a,#0x80
00B7 C0E0       492            push    acc
00B9 7400       493            mov     a,#_DisplayFloat_buff_1_50
00BB C0E0       494            push    acc
00BD 7479       495            mov     a,#(_DisplayFloat_buff_1_50 >> 8)
00BF C0E0       496            push    acc
00C1 7440       497            mov     a,#0x40
00C3 C0E0       498            push    acc
00C5 120100     499            lcall   _sprintf
00C8 E581       500            mov     a,sp
00CA 24F6       501            add     a,#0xf6
00CC F581       502            mov     sp,a
00CE            503   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:58: HEX3=SevenSeg[buff[0]-'0'];
00CE E500       504            mov     a,_DisplayFloat_buff_1_50
00D0 24D0       505            add     a,#0xd0
00D2 901140     506            mov     dptr,#_SevenSeg
00D5 93         507            movc    a,@a+dptr
00D6 F594       508            mov     _HEX3,a
00D8            509   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:59: HEX2=SevenSeg[buff[2]-'0'];
00D8 E502       510            mov     a,(_DisplayFloat_buff_1_50 + 0x0002)
00DA 24D0       511            add     a,#0xd0
00DC 901140     512            mov     dptr,#_SevenSeg
00DF 93         513            movc    a,@a+dptr
00E0 F593       514            mov     _HEX2,a
00E2            515   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:60: HEX1=SevenSeg[buff[3]-'0'];
00E2 E503       516            mov     a,(_DisplayFloat_buff_1_50 + 0x0003)
00E4 24D0       517            add     a,#0xd0
00E6 901140     518            mov     dptr,#_SevenSeg
00E9 93         519            movc    a,@a+dptr
00EA F592       520            mov     _HEX1,a
00EC            521   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:61: HEX0=SevenSeg[buff[4]-'0'];
00EC E504       522            mov     a,(_DisplayFloat_buff_1_50 + 0x0004)
00EE 24D0       523            add     a,#0xd0
00F0 901140     524            mov     dptr,#_SevenSeg
00F3 93         525            movc    a,@a+dptr
00F4 F591       526            mov     _HEX0,a
00F6 22         527            ret
00F7            528   ;------------------------------------------------------------
00F7            529   ;Allocation info for local variables in function 'Wait1ms'
00F7            530   ;------------------------------------------------------------
00F7            531   ;------------------------------------------------------------
00F7            532   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:64: void Wait1ms (void)
00F7            533   ;        -----------------------------------------
00F7            534   ;         function Wait1ms
00F7            535   ;        -----------------------------------------
00F7            536   _Wait1ms:
00F7            537   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:66: TR0=0;
00F7 C28C       538            clr     _TR0
00F9            539   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:67: TMOD=(TMOD &0xf0)|0x01; // Timer 0: GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
00F9 74F0       540            mov     a,#0xF0
00FB 5589       541            anl     a,_TMOD
00FD 4401       542            orl     a,#0x01
00FF F589       543            mov     _TMOD,a
0101            544   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:68: TH0=HIGH(TIMER_0_1ms);
0101 758CF5     545            mov     _TH0,#0xF5
0104            546   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:69: TL0=LOW(TIMER_0_1ms);
0104 758A27     547            mov     _TL0,#0x27
0107            548   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:70: TF0=0;
0107 C28D       549            clr     _TF0
0109            550   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:71: TR0=1;
0109 D28C       551            setb    _TR0
010B            552   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:72: while(TF0==0);
010B            553   L006001?:
010B 308D00     554            jnb     _TF0,L006001?
010E            555   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:73: TR0=0;
010E C28C       556            clr     _TR0
0110 22         557            ret
0111            558   ;------------------------------------------------------------
0111            559   ;Allocation info for local variables in function 'MyDelay'
0111            560   ;------------------------------------------------------------
0111            561   ;msec                      Allocated to registers r2 r3 
0111            562   ;------------------------------------------------------------
0111            563   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:76: void MyDelay (unsigned int msec)
0111            564   ;        -----------------------------------------
0111            565   ;         function MyDelay
0111            566   ;        -----------------------------------------
0111            567   _MyDelay:
0111 AA82       568            mov     r2,dpl
0113 AB83       569            mov     r3,dph
0115            570   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:78: do {
0115            571   L007001?:
0115            572   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:79: Wait1ms();
0115 C002       573            push    ar2
0117 C003       574            push    ar3
0119 120100     575            lcall   _Wait1ms
011C D003       576            pop     ar3
011E D002       577            pop     ar2
0120            578   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:80: } while (--msec);
0120 1A         579            dec     r2
0121 BAFF80     580            cjne    r2,#0xff,L007008?
0124 1B         581            dec     r3
0125            582   L007008?:
0125 EA         583            mov     a,r2
0126 4B         584            orl     a,r3
0127 7001       585            jnz     L007001?
0129 22         586            ret
012A            587   ;------------------------------------------------------------
012A            588   ;Allocation info for local variables in function 'main'
012A            589   ;------------------------------------------------------------
012A            590   ;val                       Allocated to registers r2 r3 
012A            591   ;v                         Allocated to registers r4 r5 r6 r7 
012A            592   ;------------------------------------------------------------
012A            593   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:83: void main(void)
012A            594   ;        -----------------------------------------
012A            595   ;         function main
012A            596   ;        -----------------------------------------
012A            597   _main:
012A            598   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:88: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
012A 74C0       599            mov     a,#__str_1
012C C0E0       600            push    acc
012E 7480       601            mov     a,#(__str_1 >> 8)
0130 C0E0       602            push    acc
0132 7480       603            mov     a,#0x80
0134 C0E0       604            push    acc
0136 120100     605            lcall   _printf
0139 1581       606            dec     sp
013B 1581       607            dec     sp
013D 1581       608            dec     sp
013F            609   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:90: printf("CV-8052 test program for the AD7928 in the DE1-SoC\r\n");
013F 7440       610            mov     a,#__str_2
0141 C0E0       611            push    acc
0143 7481       612            mov     a,#(__str_2 >> 8)
0145 C0E0       613            push    acc
0147 7480       614            mov     a,#0x80
0149 C0E0       615            push    acc
014B 120100     616            lcall   _printf
014E 1581       617            dec     sp
0150 1581       618            dec     sp
0152 1581       619            dec     sp
0154            620   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:92: while (1)
0154            621   L008002?:
0154            622   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:105: val|=((SWA & 0b_111) << 10); // Select channel using the switches
0154 7407       623            mov     a,#0x07
0156 55E8       624            anl     a,_SWA
0158 25E0       625            add     a,acc
015A 25E0       626            add     a,acc
015C FB         627            mov     r3,a
015D 7A00       628            mov     r2,#0x00
015F 430210     629            orl     ar2,#0x10
0162 430383     630            orl     ar3,#0x83
0165            631   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:106: val=AD7928RW(val);
0165 8A82       632            mov     dpl,r2
0167 8B83       633            mov     dph,r3
0169 120100     634            lcall   _AD7928RW
016C            635   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:107: v=(val*5.0)/4095.0;
016C AA82       636            mov     r2,dpl
016E AB83       637            mov  r3,dph
0170 C002       638            push    ar2
0172 C003       639            push    ar3
0174 120100     640            lcall   ___uint2fs
0177 AC82       641            mov     r4,dpl
0179 AD83       642            mov     r5,dph
017B AEF0       643            mov     r6,b
017D FF         644            mov     r7,a
017E C004       645            push    ar4
0180 C005       646            push    ar5
0182 C006       647            push    ar6
0184 C007       648            push    ar7
0186 900000     649            mov     dptr,#0x0000
0189 75F0A0     650            mov     b,#0xA0
018C 7440       651            mov     a,#0x40
018E 120100     652            lcall   ___fsmul
0191 AC82       653            mov     r4,dpl
0193 AD83       654            mov     r5,dph
0195 AEF0       655            mov     r6,b
0197 FF         656            mov     r7,a
0198 E581       657            mov     a,sp
019A 24FC       658            add     a,#0xfc
019C F581       659            mov     sp,a
019E E4         660            clr     a
019F C0E0       661            push    acc
01A1 74F0       662            mov     a,#0xF0
01A3 C0E0       663            push    acc
01A5 747F       664            mov     a,#0x7F
01A7 C0E0       665            push    acc
01A9 7445       666            mov     a,#0x45
01AB C0E0       667            push    acc
01AD 8C82       668            mov     dpl,r4
01AF 8D83       669            mov     dph,r5
01B1 8EF0       670            mov     b,r6
01B3 EF         671            mov     a,r7
01B4 120100     672            lcall   ___fsdiv
01B7 AC82       673            mov     r4,dpl
01B9 AD83       674            mov     r5,dph
01BB AEF0       675            mov     r6,b
01BD FF         676            mov     r7,a
01BE E581       677            mov     a,sp
01C0 24FC       678            add     a,#0xfc
01C2 F581       679            mov     sp,a
01C4 D003       680            pop     ar3
01C6 D002       681            pop     ar2
01C8            682   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:108: printf("val[%d]=0x%04x, V=%5.3f\r", SWA & 0b_111, val, v);
01C8 7407       683            mov     a,#0x07
01CA 55E8       684            anl     a,_SWA
01CC F8         685            mov     r0,a
01CD 7900       686            mov     r1,#0x00
01CF C004       687            push    ar4
01D1 C005       688            push    ar5
01D3 C006       689            push    ar6
01D5 C007       690            push    ar7
01D7 C004       691            push    ar4
01D9 C005       692            push    ar5
01DB C006       693            push    ar6
01DD C007       694            push    ar7
01DF C002       695            push    ar2
01E1 C003       696            push    ar3
01E3 C000       697            push    ar0
01E5 C001       698            push    ar1
01E7 7480       699            mov     a,#__str_3
01E9 C0E0       700            push    acc
01EB 7482       701            mov     a,#(__str_3 >> 8)
01ED C0E0       702            push    acc
01EF 7480       703            mov     a,#0x80
01F1 C0E0       704            push    acc
01F3 120100     705            lcall   _printf
01F6 E581       706            mov     a,sp
01F8 24F5       707            add     a,#0xf5
01FA F581       708            mov     sp,a
01FC D007       709            pop     ar7
01FE D006       710            pop     ar6
0200 D005       711            pop     ar5
0202 D004       712            pop     ar4
0204            713   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:109: DisplayFloat(v);
0204 8C82       714            mov     dpl,r4
0206 8D83       715            mov     dph,r5
0208 8EF0       716            mov     b,r6
020A EF         717            mov     a,r7
020B 120100     718            lcall   _DisplayFloat
020E            719   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:110: HEX5=SevenSeg[SWA & 0b_111]; // Display the channel number
020E 7407       720            mov     a,#0x07
0210 55E8       721            anl     a,_SWA
0212 901140     722            mov     dptr,#_SevenSeg
0215 93         723            movc    a,@a+dptr
0216 F58F       724            mov     _HEX5,a
0218            725   ;        C:\Source\SOC_8052\ADC_Test\AD7928_test.c:111: MyDelay(500);
0218 9001F4     726            mov     dptr,#0x01F4
021B 120100     727            lcall   _MyDelay
021E 020100     728            ljmp    L008002?
0000            729            rseg R_CSEG
0000            730   
0000            731            rseg R_XINIT
0000            732   
0000            733            rseg R_CONST
0000            734   _SevenSeg:
0000 C0         735            db 0xc0         ; 192
0001 F9         736            db 0xf9         ; 249
0002 A4         737            db 0xa4         ; 164
0003 B0         738            db 0xb0         ; 176
0004 99         739            db 0x99         ; 153
0005 92         740            db 0x92         ; 146
0006 82         741            db 0x82         ; 130
0007 F8         742            db 0xf8         ; 248
0008 80         743            db 0x80         ; 128
0009 90         744            db 0x90         ; 144
000A            745   __str_0:
000A 25352E33   746            db '%5.3f'
     66
000F 00         747            db 0x00
0010            748   __str_1:
0010 1B         749            db 0x1B
0011 5B324A     750            db '[2J'
0014 00         751            db 0x00
0015            752   __str_2:
0015 43562D38   753            db 'CV-8052 test program for the AD7928 in the DE1-SoC'
     30353220
     74657374
     2070726F
     6772616D
     20666F72
     20746865
     20414437
     39323820
     696E2074
     68652044
     45312D53
     6F43
0047 0D         754            db 0x0D
0048 0A         755            db 0x0A
0049 00         756            db 0x00
004A            757   __str_3:
004A 76616C5B   758            db 'val[%d]=0x%04x, V=%5.3f'
     25645D3D
     30782530
     34782C20
     563D2535
     2E3366
0061 0D         759            db 0x0D
0062 00         760            db 0x00
0063            761   
0003            762            CSEG
0003            763   
0003            764   end
