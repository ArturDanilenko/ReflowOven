                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   org 0
0000 020034       3      ljmp mycode
0003              4      
0003              5   Wait40us:
0003 7895         6            mov R0, #149
0005              7   X1: 
0005 00           8            nop
0006 00           9            nop
0007 00          10            nop
0008 00          11            nop
0009 00          12            nop
000A 00          13            nop
000B D8F8        14            djnz R0, X1 ; 9 machine cycles-> 9*30ns*149=40us
000D 22          15       ret
000E             16   
000E             17   LCD_command:
000E F5D9        18            mov     LCD_DATA, A
0010 C2DA        19            clr     LCD_RS
0012 00          20            nop
0013 00          21            nop
0014 D2D9        22            setb LCD_EN ; Enable pulse should be at least 230 ns
0016 00          23            nop
0017 00          24            nop
0018 00          25            nop
0019 00          26            nop
001A 00          27            nop
001B 00          28            nop
001C C2D9        29            clr     LCD_EN
001E 020003      30            ljmp Wait40us
0021             31   
0021             32   LCD_put:
0021 F5D9        33            mov     LCD_DATA, A
0023 D2DA        34            setb LCD_RS
0025 00          35            nop
0026 00          36            nop
0027 D2D9        37            setb LCD_EN ; Enable pulse should be at least 230 ns
0029 00          38            nop
002A 00          39            nop
002B 00          40            nop
002C 00          41            nop
002D 00          42            nop
002E 00          43            nop
002F C2D9        44            clr     LCD_EN
0031 020003      45            ljmp Wait40us
0034             46                        
0034             47   mycode:
0034 75817F      48       mov SP, #7FH
0037 E4          49       clr a
0038 F5E8        50       mov LEDRA, a
003A F595        51       mov LEDRB, a
003C F59E        52       mov LEDRC, a
003E F5F8        53       mov LEDG, a
0040             54   
0040 9000F4      55            mov dptr, #Banner
0043 7D01        56            mov R5, #low(0x8101)
0045 7E81        57            mov R6, #high(0x8101)
0047 1200AC      58            lcall Copy_Code_to_Xdata
004A 908100      59            mov dptr, #0x8100
004D EC          60            mov a, R4
004E F0          61            movx @dptr, a
004F             62   
004F             63       ; Turn LCD on, and wait a bit.
004F D2DB        64       setb LCD_ON
0051 C2D9        65       clr LCD_EN  ; Default state of enable must be zero
0053 120003      66       lcall Wait40us
0056             67       
0056 75DAFF      68       mov LCD_MOD, #0xff ; Use LCD_DATA as output port
0059 C2D8        69       clr LCD_RW ;  Only writing to the LCD in this code.
005B             70            
005B 740C        71            mov a, #0ch ; Display on command
005D 12000E      72            lcall LCD_command
0060 7438        73            mov a, #38H ; 8-bits interface, 2 lines, 5x7 characters
0062 12000E      74            lcall LCD_command
0065 7401        75            mov a, #01H ; Clear screen (Warning, very slow command!)
0067 12000E      76            lcall LCD_command
006A             77       
006A             78       ; Delay loop needed for 'clear screen' command above (1.6ms at least!)
006A 7928        79       mov R1, #40
006C             80   Clr_loop:
006C 120003      81            lcall Wait40us
006F D9FB        82            djnz R1, Clr_loop
0071             83   
0071             84            ; Move to first column of second row    
0071 74C0        85            mov a, #0c0H
0073 12000E      86            lcall LCD_command
0076             87                    
0076             88            ; Display message loop
0076 9000C9      89            mov dptr, #Hello
0079             90   Send_msg:
0079 E4          91            clr a
007A 93          92            movc a, @a+dptr
007B 6006        93            jz forever
007D A3          94            inc dptr
007E 120021      95            lcall LCD_put
0081 80F6        96            sjmp Send_msg
0083             97       
0083             98   forever:
0083 908000      99       mov dptr, #0x8000
0086 E0         100            movx a, @dptr
0087 60FA       101            jz forever
0089            102            
0089            103   continue:
0089 FF         104            mov R7, a ; Number of bytes in buffer
008A            105   
008A            106            ; Move to first column of first row     
008A 7480       107            mov a, #080H
008C 12000E     108            lcall LCD_command
008F            109            
008F            110   Display_loop:
008F A3         111            inc dptr
0090 E0         112            movx a, @dptr
0091 120021     113            lcall LCD_put
0094 DFF9       114       djnz R7, Display_loop        
0096            115   
0096            116            ; Acknoledge the received message
0096 908000     117            mov dptr, #0x8000
0099 E4         118            clr a
009A F0         119            movx @dptr, a
009B            120            
009B            121            ; Send the response
009B 9000D7     122            mov dptr, #OK
009E 7D01       123            mov R5, #low(0x8101)
00A0 7E81       124            mov R6, #high(0x8101)
00A2 1200AC     125            lcall Copy_Code_to_Xdata
00A5 908100     126            mov dptr, #0x8100
00A8 EC         127            mov a, R4
00A9 F0         128            movx @dptr, a
00AA            129            
00AA 80D7       130            sjmp forever
00AC            131   
00AC            132   
00AC            133   Copy_Code_to_Xdata:
00AC 7C00       134            mov R4, #0 ; the counter
00AE            135   Copy_loop:
00AE E4         136            clr a
00AF 93         137            movc a,@dptr+a
00B0 6016       138            jz donecopy
00B2 A3         139            inc dptr
00B3 C082       140            push dpl
00B5 C083       141            push dph
00B7 8D82       142            mov dpl, R5
00B9 8E83       143            mov dph, R6
00BB F0         144            movx @dptr, a
00BC A3         145            inc dptr
00BD AE83       146            mov R6, dph
00BF AD82       147            mov R5, dpl
00C1 D083       148            pop dph
00C3 D082       149            pop dpl
00C5 0C         150            inc R4
00C6 80E6       151            sjmp Copy_loop
00C8            152   donecopy:
00C8 22         153            ret
00C9            154                    
00C9            155   Hello:
00C9 48656C6C   156            DB 'Hello, world!'
     6F2C2077
     6F726C64
     21
00D6 00         157            DB 0
00D7            158   OK:
00D7 54686520   159            DB 'The message was received ok.'
     6D657373
     61676520
     77617320
     72656365
     69766564
     206F6B2E
00F3 00         160            DB 0
00F4            161   BANNER:
00F4 2A2A2A2A   162            DB '*********************************************************\r\n'
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A0D0A
012F 2A202020   163            DB '*           Shared memory communication test            *\r\n'
     20202020
     20202020
     53686172
     6564206D
     656D6F72
     7920636F
     6D6D756E
     69636174
     696F6E20
     74657374
     20202020
     20202020
     20202020
     2A0D0A
016A 2A202020   164            DB '*             (c) Jesus Calvino-Fraga 2015              *\r\n'
     20202020
     20202020
     20202863
     29204A65
     73757320
     43616C76
     696E6F2D
     46726167
     61203230
     31352020
     20202020
     20202020
     20202020
     2A0D0A
01A5 2A2A2A2A   165            DB '*********************************************************\r\n'
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A2A2A2A
     2A0D0A
01E0 00         166            DB 0
01E1            167            
01E1            168   end
